module vgpr_busy_table_decoder
  (
   vgpr_addr,
   vgpr_valid,
   
   output_decoded
   );
   parameter MAX_NUMBER_WORDS = 4;
   
   input[`VGPR_ADDR_LENGTH-1:0] vgpr_addr;
   input [MAX_NUMBER_WORDS-1:0] vgpr_valid;

   output [`NUMBER_VGPR-1:0] 	output_decoded;
   reg [`NUMBER_VGPR+4-1:0] 	output_decoded_2;
   
   assign output_decoded = output_decoded_2[`NUMBER_VGPR-1:0] | { {(`NUMBER_VGPR-4){1'b0}},output_decoded_2[`NUMBER_VGPR+4-1:`NUMBER_VGPR]};
   
   always @( vgpr_addr or vgpr_valid ) begin
      output_decoded_2 <= {(`NUMBER_VGPR+4){1'b0}};
      case(vgpr_addr)
%%start_veriperl
    my $i;
    for($i = 0; $i < 1024; $i = $i +1)
    {
     print "         10'd$i : output_decoded_2[MAX_NUMBER_WORDS-1+$i:$i] <= vgpr_valid;";
    }    
%%stop_veriperl
	default:       output_decoded_2 <= {(`NUMBER_VGPR+4){1'b0}};
      endcase
   end
   
endmodule
