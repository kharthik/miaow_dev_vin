local_size = 1 (1,1,1)
global_size = 1 (1,1,1)
group_count = 1 (1,1,1)
wavefront_count = 1
wavefronts_per_work_group = 1
 tid tid2 tid1 tid0   gid gid2 gid1 gid0   lid lid2 lid1 lid0  wavefront            work-group
   0    0    0    0     0    0    0    0     0    0    0    0      wavefront[i0-i0].0        work-group[i0-i1].0   

###0_0_0
 s_movk_i32    s8, 0x0000                                  // 00000000: B0080000
S8<=(0) 

###0_0_0
 s_mov_b32     s9, 0x00200000                              // 00000004: BE8903FF 00200000
S9<=(2097152) 

###0_0_0
 s_movk_i32    s7, 0x0021                                  // 0000000C: B0070021
S7<=(33) 

###0_0_0
 s_buffer_load_dwordx2  s[6:7], s[8:11], s7                // 00000010: C2430807
S6<=(33)(1668552918,4.5028e+21f) S7<=(37)(1266191750,1.62892e+07f) 

###0_0_0
 s_mov_b32     s2, s5                                      // 00000014: BE820305
S2<=(36) 

###0_0_0
 v_lshrrev_b32  v1, v17, v17                               // 00000018: 2C022311
t0: V1<=(0) 

###0_0_0
 v_mul_i32_i24  v4, v11, v16                               // 0000001C: 1208210B
t0: V4<=(0) 

###0_0_0
 s_and_b32     s2, s6, s7                                  // 00000020: 87020706
S2<=(1131415686) scc<=(1) 

###0_0_0
 v_cmp_le_u32  vcc, v14, v16                               // 00000024: 7D86210E
wf_id0: vcc<=(1) 

###0_0_0
 v_add_i32     v2, vcc, v11, v12                           // 00000028: 4A04190B
t0: V2<=(0) wf_id0: vcc<=(0) 

###0_0_0
 s_branch      label_000C                                  // 0000002C: BF820000


###0_0_0
 s_mov_b32     s0, s6                                      // 00000030: BE800306
S0<=(1668552918) 

###0_0_0
 s_mov_b32     s4, s7                                      // 00000034: BE840307
S4<=(1266191750) 

###0_0_0
 s_mov_b32     s3, s6                                      // 00000038: BE830306
S3<=(1668552918) 

###0_0_0
 s_mov_b32     s1, s9                                      // 0000003C: BE810309
S1<=(2097152) 

###0_0_0
 s_mov_b32     s0, s7                                      // 00000040: BE800307
S0<=(1266191750) 

###0_0_0
 s_cmp_eq_i32  s3, s9                                      // 00000044: BF000903
scc<=(0) 

###0_0_0
 s_movk_i32    s8, 0x0000                                  // 00000048: B0080000
S8<=(0) 

###0_0_0
 s_mov_b32     s9, 0x000e0000                              // 0000004C: BE8903FF 000E0000
S9<=(917504) 

###0_0_0
 s_movk_i32    s8, 0x000a                                  // 00000054: B008000A
S8<=(10) 

###0_0_0
 s_buffer_load_dword  s7, s[8:11], 0x08                    // 00000058: C2038908
S7<=(42)(39541406,1.61156e-37f)

###0_0_0
 v_lshrrev_b32  v1, s6, v10                                // 0000005C: 2C021406
t0: V1<=(0) 

###0_0_0
 s_cmp_ge_u32  s0, s9                                      // 00000060: BF090900
scc<=(1) 

###0_0_0
 s_not_b32     s3, s7                                      // 00000064: BE830707
S3<=(-39541407) scc<=(1) 

###0_0_0
 v_cmp_gt_f32  vcc, s8, v19                                // 00000068: 7C082608
wf_id0: vcc<=(1) 

###0_0_0
 s_movk_i32    s4, 0x0000                                  // 0000006C: B0040000
S4<=(0) 

###0_0_0
 s_movk_i32    s5, 0x00a4                                  // 00000070: B00500A4
S5<=(164) 

###0_0_0
 s_movk_i32    s6, 0x0000                                  // 00000074: B0060000
S6<=(0) 

###0_0_0
 s_movk_i32    s7, 0x0000                                  // 00000078: B0070000
S7<=(0) 

###0_0_0
 v_mov_b32     v4, 0x0000002e                              // 0000007C: 7E0802FF 0000002E
t0: V4<=(46) 

###0_0_0
 s_movk_i32    s7, 0x0001                                  // 00000084: B0070001
S7<=(1) 

###0_0_0
 tbuffer_load_format_x  v19, v4, s[4:7], s7 offen offset:33 format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_UNORM] // 00000088: E8201021 07011304
t0: V19<=(46)(-514127094,-2.5254e+20f) 

###0_0_0
 s_not_b32     s3, s5                                      // 00000090: BE830705
S3<=(-165) scc<=(1) 

###0_0_0
 s_or_b32      s1, s5, s9                                  // 00000094: 88010905
S1<=(917668) scc<=(1) 

###0_0_0
 v_mov_b32     v1, v15                                     // 00000098: 7E02030F
t0: V1<=(0) 

###0_0_0
 v_add_i32     v1, vcc, v15, v15                           // 0000009C: 4A021F0F
t0: V1<=(0) wf_id0: vcc<=(0) 

###0_0_0
 s_branch      label_002B                                  // 000000A0: BF820002


###0_0_0
 s_mov_b32     s1, s8                                      // 000000AC: BE810308
S1<=(10) 

###0_0_0
 s_mov_b32     s1, s7                                      // 000000B0: BE810307
S1<=(1) 

###0_0_0
 s_mov_b32     s4, s9                                      // 000000B4: BE840309
S4<=(917504) 

###0_0_0
 v_add_i32     v2, vcc, v15, v15                           // 000000B8: 4A041F0F
t0: V2<=(0) wf_id0: vcc<=(0) 

###0_0_0
 s_branch      label_0030                                  // 000000BC: BF820000


###0_0_0
 s_mov_b32     s0, s5                                      // 000000C0: BE800305
S0<=(164) 

###0_0_0
 s_mov_b32     s3, s7                                      // 000000C4: BE830307
S3<=(1) 

###0_0_0
 s_mov_b32     s1, s9                                      // 000000C8: BE810309
S1<=(917504) 

###0_0_0
 s_mov_b32     s1, s5                                      // 000000CC: BE810305
S1<=(164) 

###0_0_0
 s_mov_b32     s1, s5                                      // 000000D0: BE810305
S1<=(164) 

###0_0_0
 s_or_b32      s0, s8, s6                                  // 000000D4: 88000608
S0<=(10) scc<=(1) 

###0_0_0
 s_add_i32     s0, s6, s6                                  // 000000D8: 81000606
S0<=(0) scc<=(0) 

###0_0_0
 v_add_i32     v7, vcc, s8, v10                            // 000000DC: 4A0E1408
t0: V7<=(10) wf_id0: vcc<=(0) 

###0_0_0
 s_cbranch_scc0  label_003C                                // 000000E0: BF840003


###0_0_0
 s_mov_b32     s1, s6                                      // 000000F0: BE810306
S1<=(0) 

###0_0_0
 s_mov_b32     s2, s5                                      // 000000F4: BE820305
S2<=(164) 

###0_0_0
 v_add_i32     v3, vcc, s8, v10                            // 000000F8: 4A061408
t0: V3<=(10) wf_id0: vcc<=(0) 

###0_0_0
 s_cbranch_scc1  label_0040                                // 000000FC: BF850000


###0_0_0
 s_mov_b32     s2, s6                                      // 00000100: BE820306
S2<=(0) 

###0_0_0
 s_mov_b32     s3, s7                                      // 00000104: BE830307
S3<=(1) 

###0_0_0
 s_mov_b32     s3, s8                                      // 00000108: BE830308
S3<=(10) 

###0_0_0
 s_mov_b32     s0, s6                                      // 0000010C: BE800306
S0<=(0) 

###0_0_0
 s_mov_b32     s2, s7                                      // 00000110: BE820307
S2<=(1) 

###0_0_0
 v_or_b32      v8, s6, v19                                 // 00000114: 38102606
t0: V8<=(-514127094) 

###0_0_0
 v_cmp_gt_u32  vcc, s7, v11                                // 00000118: 7D881607
wf_id0: vcc<=(1) 

###0_0_0
 v_lshlrev_b32  v4, s8, v10                                // 0000011C: 34081408
t0: V4<=(0) 

###0_0_0
 s_lshl_b32    s4, s9, s8                                  // 00000120: 8F040809
S4<=(939524096) scc<=(1) 

###0_0_0
 s_ashr_i32    s3, s7, s9                                  // 00000124: 91030907
S3<=(1) scc<=(1) 

###0_0_0
 v_add_i32     v7, vcc, v18, v12                           // 00000128: 4A0E1912
t0: V7<=(0) wf_id0: vcc<=(0) 

###0_0_0
 s_waitcnt     vmcnt(3) & lgkmcnt(0) & expcnt(0)           // 0000012C: BF8C0003


###0_0_0
 s_mov_b32     s4, s6                                      // 00000130: BE840306
S4<=(0) 

###0_0_0
 s_mov_b32     s2, s8                                      // 00000134: BE820308
S2<=(10) 

###0_0_0
 s_mov_b32     s3, s6                                      // 00000138: BE830306
S3<=(0) 

###0_0_0
 s_mov_b32     s4, s8                                      // 0000013C: BE840308
S4<=(10) 

###0_0_0
 s_mov_b32     s1, s9                                      // 00000140: BE810309
S1<=(917504) 

###0_0_0
 v_mul_i32_i24  v4, s5, v14                                // 00000144: 12081C05
t0: V4<=(0) 

###0_0_0
 s_movk_i32    s8, 0x0000                                  // 00000148: B0080000
S8<=(0) 

###0_0_0
 s_movk_i32    s9, 0x0028                                  // 0000014C: B0090028
S9<=(40) 

###0_0_0
 s_movk_i32    s10, 0x0000                                 // 00000150: B00A0000
S10<=(0) 

###0_0_0
 s_movk_i32    s11, 0x0000                                 // 00000154: B00B0000
S11<=(0) 

###0_0_0
 v_mov_b32     v9, 0x00000026                              // 00000158: 7E1202FF 00000026
t0: V9<=(38) 

###0_0_0
 s_movk_i32    s5, 0x0029                                  // 00000160: B0050029
S5<=(41) 

###0_0_0
 tbuffer_load_format_x  v13, v9, s[8:11], s5 idxen offset:34 format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_UNORM] // 00000164: E8202022 05020D09
t0: V13<=(34)(-2040302568,-4.27792e-35f) 

###0_0_0
 s_movk_i32    s4, 0x0000                                  // 0000016C: B0040000
S4<=(0) 

###0_0_0
 s_movk_i32    s5, 0x00ac                                  // 00000170: B00500AC
S5<=(172) 

###0_0_0
 s_movk_i32    s6, 0x0000                                  // 00000174: B0060000
S6<=(0) 

###0_0_0
 s_movk_i32    s7, 0x0000                                  // 00000178: B0070000
S7<=(0) 

###0_0_0
 v_mov_b32     v4, 0x00000017                              // 0000017C: 7E0802FF 00000017
t0: V4<=(23) 

###0_0_0
 s_movk_i32    s7, 0x0023                                  // 00000184: B0070023
S7<=(35) 

###0_0_0
 tbuffer_load_format_xyzw  v[12:15], v4, s[4:7], s7 idxen offset:44 format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_UNORM] // 00000188: E873202C 07010C04
t0: V12<=(44)(185205339,2.65796e-32f) t0: V13<=(48)(-2127765157,-3.17531e-38f) t0: V14<=(52)(1178266460,11962.8f) t0: V15<=(56)(1896704110,7.00218e+29f) 

###0_0_0
 v_and_b32     v9, s6, v10                                 // 00000190: 36121406
t0: V9<=(0) 

###0_0_0
 v_cndmask_b32  v0, s7, v10, vcc                           // 00000194: 00001407
t0: V0<=(35) 

###0_0_0
 s_sub_i32     s2, s7, s5                                  // 00000198: 81820507
S2<=(-137) scc<=(0) 

###0_0_0
 s_movk_i32    s4, 0x0000                                  // 0000019C: B0040000
S4<=(0) 

###0_0_0
 s_movk_i32    s5, 0x00b0                                  // 000001A0: B00500B0
S5<=(176) 

###0_0_0
 s_movk_i32    s6, 0x0000                                  // 000001A4: B0060000
S6<=(0) 

###0_0_0
 s_movk_i32    s7, 0x0000                                  // 000001A8: B0070000
S7<=(0) 

###0_0_0
 v_mov_b32     v1, 0x00000002                              // 000001AC: 7E0202FF 00000002
t0: V1<=(2) 

###0_0_0
 s_movk_i32    s9, 0x0008                                  // 000001B4: B0090008
S9<=(8) 

###0_0_0
 tbuffer_load_format_x  v18, v1, s[4:7], s9 offen offset:39 format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_UNORM] // 000001B8: E8201027 09011201
t0: V18<=(2)(-1926628425,-5.23801e-31f) 

###0_0_0
 v_cndmask_b32  v7, s6, v15, vcc                           // 000001C0: 000E1E06
t0: V7<=(0) 

###0_0_0
 s_movk_i32    s6, 0x0000                                  // 000001C4: B0060000
S6<=(0) 

###0_0_0
 s_mov_b32     s7, 0x00130000                              // 000001C8: BE8703FF 00130000
S7<=(1245184) 

###0_0_0
 s_movk_i32    s9, 0x0013                                  // 000001D0: B0090013
S9<=(19) 

###0_0_0
 s_buffer_load_dword  s8, s[6:9], s9                       // 000001D4: C2040609
S8<=(19)(-1082448351,-0.981051f)

###0_0_0
 v_cmp_eq_i32  vcc, s6, v10                                // 000001D8: 7D041406
wf_id0: vcc<=(1) 

###0_0_0
 v_add_i32     v6, vcc, v12, v18                           // 000001DC: 4A0C250C
t0: V6<=(-1741423086) wf_id0: vcc<=(0) 

###0_0_0
 v_add_i32     v6, vcc, v10, v19                           // 000001E0: 4A0C270A
t0: V6<=(-514127094) wf_id0: vcc<=(0) 

###0_0_0
 s_cbranch_scc0  label_007B                                // 000001E4: BF840001


###0_0_0
 s_mov_b32     s2, s8                                      // 000001EC: BE820308
S2<=(-1082448351) 

###0_0_0
 s_mov_b32     s1, s9                                      // 000001F0: BE810309
S1<=(19) 

###0_0_0
 s_mov_b32     s2, s6                                      // 000001F4: BE820306
S2<=(0) 

###0_0_0
 s_mov_b32     s2, s7                                      // 000001F8: BE820307
S2<=(1245184) 

###0_0_0
 v_mov_b32     v6, s8                                      // 000001FC: 7E0C0208
t0: V6<=(-1082448351) 

###0_0_0
 s_not_b32     s1, s7                                      // 00000200: BE810707
S1<=(-1245185) scc<=(1) 

###0_0_0
 v_cmp_ne_i32  vcc, s6, v18                                // 00000204: 7D0A2406
wf_id0: vcc<=(1) 

###0_0_0
 v_mul_f32     v5, s8, v14                                 // 00000208: 100A1C08
t0: V5<=(-11736.2f) 

###0_0_0
 v_lshlrev_b32  v2, s9, v15                                // 0000020C: 34041E09
t0: V2<=(1131413504) 

###0_0_0
 s_and_saveexec_b64  s[0:1], s[6:7]                        // 00000210: BE802406
S0<=(1) S1<=(0) exec_lo<=(0) exec_hi<=(0) scc<=(0) 

###0_0_0
 v_mov_b32     v2, v17                                     // 00000214: 7E040311


###0_0_0
 v_cndmask_b32  v5, v12, v17, vcc                          // 00000218: 000A230C


###0_0_0
 s_mulk_i32    s3, 0x0004                                  // 0000021C: B8030004
S3<=(0) scc<=(0) 

###0_0_0
 s_sub_i32     s0, s5, s9                                  // 00000220: 81800905
S0<=(157) scc<=(0) 

###0_0_0
 s_lshl_b32    s1, s6, s5                                  // 00000224: 8F010506
S1<=(0) scc<=(0) 

###0_0_0
 s_add_u32     s1, s8, s6                                  // 00000228: 80010608
S1<=(-1082448351) scc<=(0) 

###0_0_0
 s_not_b32     s1, s8                                      // 0000022C: BE810708
S1<=(1082448350) scc<=(1) 

###0_0_0
 v_lshlrev_b32  v0, s7, v17                                // 00000230: 34002207


###0_0_0
 v_cmp_gt_f32  vcc, s7, v14                                // 00000234: 7C081C07


###0_0_0
 v_add_i32     v9, vcc, s8, v14                            // 00000238: 4A121C08


###0_0_0
 s_cbranch_scc1  label_0091                                // 0000023C: BF850001


###0_0_0
 s_mov_b32     s3, s9                                      // 00000244: BE830309
S3<=(19) 

###0_0_0
 s_mov_b32     s0, s9                                      // 00000248: BE800309
S0<=(19) 

###0_0_0
 s_mov_b32     s0, s9                                      // 0000024C: BE800309
S0<=(19) 

###0_0_0
 s_mov_b32     s1, s9                                      // 00000250: BE810309
S1<=(19) 

###0_0_0
 s_cmp_ge_u32  s0, s7                                      // 00000254: BF090700
scc<=(0) 

###0_0_0
 s_movk_i32    s6, 0x0000                                  // 00000258: B0060000
S6<=(0) 

###0_0_0
 s_mov_b32     s7, 0x00220000                              // 0000025C: BE8703FF 00220000
S7<=(2228224) 

###0_0_0
 s_movk_i32    s7, 0x001c                                  // 00000264: B007001C
S7<=(28) 

###0_0_0
 s_buffer_load_dword  s8, s[6:9], s7                       // 00000268: C2040607
S8<=(28)(488612098,2.11267e-21f)

###0_0_0
 v_cndmask_b32  v2, v11, v12, vcc                          // 0000026C: 0004190B


###0_0_0
 s_lshl_b32    s0, s5, s6                                  // 00000270: 8F000605
S0<=(176) scc<=(1) 

###0_0_0
 s_mulk_i32    s0, 0x0002                                  // 00000274: B8000002
S0<=(352) scc<=(0) 

###0_0_0
 s_min_u32     s3, s7, s8                                  // 00000278: 83830807
S3<=(28) scc<=(1) 

###0_0_0
 s_movk_i32    s4, 0x0000                                  // 0000027C: B0040000
S4<=(0) 

###0_0_0
 s_mov_b32     s5, 0x002a0000                              // 00000280: BE8503FF 002A0000
S5<=(2752512) 

###0_0_0
 s_movk_i32    s6, 0x0026                                  // 00000288: B0060026
S6<=(38) 

###0_0_0
 s_buffer_load_dword  s5, s[4:7], s6                       // 0000028C: C2028406
S5<=(38)(1061910669,0.794808f)

###0_0_0
 v_sub_f32     v9, v18, v12                                // 00000290: 08121912


###0_0_0
 v_cmp_gt_f32  vcc, s8, v13                                // 00000294: 7C081A08


###0_0_0
 v_add_i32     v6, vcc, s9, v14                            // 00000298: 4A0C1C09


###0_0_0
 s_waitcnt     vmcnt(1) & lgkmcnt(0) & expcnt(0)           // 0000029C: BF8C0001


###0_0_0
 s_mov_b32     s3, s9                                      // 000002A0: BE830309
S3<=(19) 

###0_0_0
 s_mov_b32     s4, s5                                      // 000002A4: BE840305
S4<=(1061910669) 

###0_0_0
 s_mov_b32     s1, s7                                      // 000002A8: BE810307
S1<=(28) 

###0_0_0
 s_mov_b32     s0, s7                                      // 000002AC: BE800307
S0<=(28) 

###0_0_0
 s_mov_b32     s4, s6                                      // 000002B0: BE840306
S4<=(38) 

###0_0_0
 s_add_i32     s0, s6, s9                                  // 000002B4: 81000906
S0<=(57) scc<=(0) 

###0_0_0
 v_cmp_le_u32  vcc, s8, v16                                // 000002B8: 7D862008


###0_0_0
 v_cmp_eq_i32  vcc, v19, v10                               // 000002BC: 7D041513


###0_0_0
 v_add_f32     v2, v16, v11                                // 000002C0: 06041710


###0_0_0
 s_cmp_eq_i32  s4, s5                                      // 000002C4: BF000504
scc<=(0) 

###0_0_0
 v_and_b32     v6, v13, v17                                // 000002C8: 360C230D


###0_0_0
 s_movk_i32    s4, 0x0000                                  // 000002CC: B0040000
S4<=(0) 

###0_0_0
 s_mov_b32     s5, 0x00050000                              // 000002D0: BE8503FF 00050000
S5<=(327680) 

###0_0_0
 s_movk_i32    s8, 0x001a                                  // 000002D8: B008001A
S8<=(26) 

###0_0_0
 s_buffer_load_dword  s6, s[4:7], s8                       // 000002DC: C2030408
S6<=(26)(-1593653715,-4.4308e-19f)

###0_0_0
 v_cmp_gt_u32  vcc, v16, v14                               // 000002E0: 7D881D10


###0_0_0
 v_lshrrev_b32  v4, s9, v17                                // 000002E4: 2C082209


###0_0_0
 s_mov_b32     s3, s5                                      // 000002E8: BE830305
S3<=(327680) 

###0_0_0
 v_mov_b32     v3, s5                                      // 000002EC: 7E060205


###0_0_0
 v_add_i32     v7, vcc, s9, v16                            // 000002F0: 4A0E2009


###0_0_0
 s_cbranch_scc1  label_00C2                                // 000002F4: BF850004


###0_0_0
 s_mov_b32     s2, s6                                      // 000002F8: BE820306
S2<=(-1593653715) 

###0_0_0
 s_mov_b32     s3, s7                                      // 000002FC: BE830307
S3<=(28) 

###0_0_0
 s_mov_b32     s3, s8                                      // 00000300: BE830308
S3<=(26) 

###0_0_0
 s_mov_b32     s4, s5                                      // 00000304: BE840305
S4<=(327680) 

###0_0_0
 s_mov_b32     s2, s8                                      // 00000308: BE820308
S2<=(26) 

###0_0_0
 v_mul_f32     v6, s9, v16                                 // 0000030C: 100C2009


###0_0_0
 v_cmp_eq_i32  vcc, v19, v11                               // 00000310: 7D041713


###0_0_0
 s_and_b32     s1, s5, s7                                  // 00000314: 87010705
S1<=(0) scc<=(0) 

###0_0_0
 s_movk_i32    s6, 0x0000                                  // 00000318: B0060000
S6<=(0) 

###0_0_0
 s_mov_b32     s7, 0x001d0000                              // 0000031C: BE8703FF 001D0000
S7<=(1900544) 

###0_0_0
 s_movk_i32    s9, 0x001c                                  // 00000324: B009001C
S9<=(28) 

###0_0_0
 s_buffer_load_dword  s8, s[6:9], 0x09                     // 00000328: C2040709
S8<=(36)(2022540899,2.29637e+34f)

###0_0_0
 v_cmp_eq_i32  vcc, v18, v11                               // 0000032C: 7D041712


###0_0_0
 v_cmp_ne_i32  vcc, v16, v18                               // 00000330: 7D0A2510


###0_0_0
 s_movk_i32    s8, 0x0000                                  // 00000334: B0080000
S8<=(0) 

###0_0_0
 s_mov_b32     s9, 0x00020000                              // 00000338: BE8903FF 00020000
S9<=(131072) 

###0_0_0
 s_movk_i32    s6, 0x0010                                  // 00000340: B0060010
S6<=(16) 

###0_0_0
 s_buffer_load_dwordx2  s[9:10], s[8:11], 0x06             // 00000344: C2448906
S9<=(24)(-970095638,-11105f) S10<=(28)(488612098,2.11267e-21f) 

###0_0_0
 v_mul_i32_i24  v6, s5, v18                                // 00000348: 120C2405


###0_0_0
 v_and_b32     v5, s6, v11                                 // 0000034C: 360A1606


###0_0_0
 s_mulk_i32    s4, 0x000f                                  // 00000350: B804000F
S4<=(4915200) scc<=(0) 

###0_0_0
 v_mul_i32_i24  v8, v16, v17                               // 00000354: 12102310


###0_0_0
 s_mov_b32     s3, s7                                      // 00000358: BE830307
S3<=(1900544) 

###0_0_0
 s_endpgm                                                  // 0000035C: BF810000

